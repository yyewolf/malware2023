import pefile
def find_patterns(file_path, pattern, pattern2):
    pe = pefile.PE(file_path)
    
    for section in pe.sections:
        section_data = section.get_data()
        offset = section.VirtualAddress
        
        print(f"Scanning section {section.Name.decode('utf-8').rstrip(chr(0))}...")
        tempKey = ""
        
        lastOffset = offset
        
        while offset < section.VirtualAddress + len(section_data):
            # print(section_data[offset:offset + 20])
            search_if = section_data[offset - section.VirtualAddress:offset - section.VirtualAddress + len(pattern)]
                
            # check if matches on the pattern
            m1 = True
            for i in range(len(pattern)):
                if pattern[i] == ord("?") or pattern[i] == ord("X"):
                    continue
                if pattern[i] != search_if[i]:
                    m1 = False
                    break
                
            m2 = True
            for i in range(len(pattern2)):
                if pattern2[i] == ord("?") or pattern2[i] == ord("X"):
                    continue
                if pattern2[i] != search_if[i]:
                    m2 = False
                    break
            
            if m1:
                value_offset = offset + pattern.index(b"X")
                value = pe.get_memory_mapped_image()[value_offset]
                tempKey += chr(value)

                deltaOffset = offset - lastOffset
                
                if deltaOffset > 634:
                    # weird
                    print(f"{deltaOffset} {offset}")
                
                lastOffset = offset
                
                if deltaOffset >= 20 and deltaOffset <= 634:
                    print(f"{tempKey}")
                    tempKey = ""
                    
            if m2:
                value_offset = offset + pattern2.index(b"X")
                value = pe.get_memory_mapped_image()[value_offset]
                
                deltaOffset = offset - lastOffset
                lastOffset = offset
                
                if deltaOffset > 634:
                    # weird
                    print(f"{deltaOffset} {offset}")
                
                if deltaOffset >= 20 and deltaOffset <= 634:
                    print(f"{tempKey}")
                    tempKey = ""
                    
                tempKey += chr(value)
                

            offset += 1

    pe.close()

if __name__ == "__main__":
    file_path = "gigachad.exe"
    
    # 8B????8B????0FBE????83??XX0F85
    # I need to search for this pattern, ?? is a wildcard and XX is the value I want to find
    
    # try with this first : 8B4D0C8B51040FBE421E83F8450F8522020000
    pattern1 = b"\x8B??\x8B??\x0F\xBE??\x83?X\x0F\x85??\x00\x00"
    pattern2 = b"\x8B??\x8B??\x0F\xBE?\x83?X\x0F\x85??\x00\x00"
    #pattern1 = b"\x8B\x4D\x0C\x8B\x51\x04\x0F\xBE\x42\x1E\x83\xF8\x45\x0F\x85\x22\x02\x00\x00"

    find_patterns(file_path, pattern1, pattern2)